{% extends 'base.html.twig' %}

{% block title %}Add New Item{% endblock %}

{% block body %}
    <div class="container mx-auto p-4">
        <a href="{{ path('bucket_index') }}" class="text-gray-500 hover:text-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </a>
        <h1 class="text-2xl md:text-3xl lg:text-4xl font-bold my-4 text-center">Add New Item</h1>
        <div id="map" class="w-full h-64 md:h-80 lg:h-96"></div>
        {{ form_start(form) }}
            <div class="mb-4">
                {{ form_label(form.title, 'Title', {'label_attr': {'class': 'block text-gray-700'}}) }}
                {{ form_widget(form.title, {'attr': {'class': 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700', 'id': 'title-input'}}) }}
            </div>
            <div class="mb-4">
                {{ form_label(form.description, 'Description', {'label_attr': {'class': 'block text-gray-700'}}) }}
                {{ form_widget(form.description, {'attr': {'class': 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700', 'id': 'description-input'}}) }}
                <button type="button" id="generate-description" class="bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg mt-2">GÃ©nÃ©rer la description</button>
            </div>
            <div class="mb-4">
                {{ form_label(form.location, 'Location', {'label_attr': {'class': 'block text-gray-700'}}) }}
                {{ form_widget(form.location, {'attr': {'class': 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700', 'id': 'location-input', 'readonly': true}}) }}
            </div>
            <div class="mb-4 flex items-center">
                {{ form_widget(form.completed, {'attr': {'class': 'mr-2'}}) }}
                {{ form_label(form.completed, 'Completed', {'label_attr': {'class': 'text-gray-700'}}) }}
            </div>
            <div class="flex flex-col md:flex-row justify-center space-y-4 md:space-y-0 md:space-x-4">
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-lg shadow-lg">ðŸ’¾</button>
                <a href="{{ path('bucket_index') }}" class="bg-gray-500 text-white px-4 py-2 rounded-lg shadow-lg">ðŸ”™</a>
            </div>
        {{ form_end(form) }}
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        var map = L.map('map').setView([20, 0], 2);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        map.on('click', function(e) {
            var locationInput = document.getElementById('bucket_item_location');
            if (locationInput) {
                locationInput.value = `${e.latlng.lat},${e.latlng.lng}`;
            }
        });
    });
        

        

        document.getElementById('generate-description').addEventListener('click', function() {
            var title = document.getElementById('bucket_item_title').value;
            if (title) {
                fetch('http://localhost:5000/generate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title: title
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data && data.description) {
                        document.getElementById('bucket_item_description').value = data.description.trim();
                    } else {
                        console.error('No description generated:', data);
                    }
                })
                .catch(error => {
                    console.error('Error generating description:', error);
                });
            } else {
                alert('Veuillez remplir le titre avant de gÃ©nÃ©rer la description.');
            }
        });
    </script>
{% endblock %}